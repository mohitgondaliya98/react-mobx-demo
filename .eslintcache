[{"E:\\office-work\\hubura\\react-mobx-demo\\src\\index.tsx":"1","E:\\office-work\\hubura\\react-mobx-demo\\src\\reportWebVitals.ts":"2","E:\\office-work\\hubura\\react-mobx-demo\\src\\App.tsx":"3","E:\\office-work\\hubura\\react-mobx-demo\\src\\store\\NoteStore.ts":"4","E:\\office-work\\hubura\\react-mobx-demo\\src\\component\\home\\home.tsx":"5","E:\\office-work\\hubura\\react-mobx-demo\\src\\component\\privacy\\privacyPolicy.tsx":"6","E:\\office-work\\hubura\\react-mobx-demo\\src\\component\\term-and-condition\\termCondition.tsx":"7","E:\\office-work\\hubura\\react-mobx-demo\\src\\component\\profile\\addProfile.tsx":"8","E:\\office-work\\hubura\\react-mobx-demo\\src\\component\\profile\\basicInformation.tsx":"9","E:\\office-work\\hubura\\react-mobx-demo\\src\\component\\profile\\skillCertification.tsx":"10","E:\\office-work\\hubura\\react-mobx-demo\\src\\component\\profile\\preferredJobs.tsx":"11"},{"size":494,"mtime":1611142460891,"results":"12","hashOfConfig":"13"},{"size":440,"mtime":1611142460893,"results":"14","hashOfConfig":"13"},{"size":1402,"mtime":1612169364859,"results":"15","hashOfConfig":"13"},{"size":516,"mtime":1611142460894,"results":"16","hashOfConfig":"13"},{"size":28271,"mtime":1612170236611,"results":"17","hashOfConfig":"13"},{"size":11529,"mtime":1612170226447,"results":"18","hashOfConfig":"13"},{"size":10900,"mtime":1612170226447,"results":"19","hashOfConfig":"13"},{"size":12923,"mtime":1612170226447,"results":"20","hashOfConfig":"13"},{"size":4173,"mtime":1611923511730,"results":"21","hashOfConfig":"13"},{"size":10183,"mtime":1611925929642,"results":"22","hashOfConfig":"13"},{"size":10595,"mtime":1612159718089,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"1qsig0t",{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"35","messages":"36","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"37","messages":"38","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"39","messages":"40","errorCount":0,"warningCount":25,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"41","messages":"42","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"44"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"26"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"26"},"E:\\office-work\\hubura\\react-mobx-demo\\src\\index.tsx",[],["51","52"],"E:\\office-work\\hubura\\react-mobx-demo\\src\\reportWebVitals.ts",[],"E:\\office-work\\hubura\\react-mobx-demo\\src\\App.tsx",["53"],"E:\\office-work\\hubura\\react-mobx-demo\\src\\store\\NoteStore.ts",[],"E:\\office-work\\hubura\\react-mobx-demo\\src\\component\\home\\home.tsx",["54","55","56","57"],"E:\\office-work\\hubura\\react-mobx-demo\\src\\component\\privacy\\privacyPolicy.tsx",["58","59","60"],"E:\\office-work\\hubura\\react-mobx-demo\\src\\component\\term-and-condition\\termCondition.tsx",["61","62","63"],"E:\\office-work\\hubura\\react-mobx-demo\\src\\component\\profile\\addProfile.tsx",["64","65","66","67","68","69","70","71","72","73","74","75","76","77","78","79","80","81","82","83","84","85","86","87","88"],"E:\\office-work\\hubura\\react-mobx-demo\\src\\component\\profile\\basicInformation.tsx",["89","90"],"import React from 'react'\r\nimport { Button, TextField } from '@material-ui/core';\r\nimport { ToggleButton, ToggleButtonGroup } from '@material-ui/lab';\r\n\r\n\r\nexport default function BasicInformation() {\r\n\r\n    const [value, setValue] = React.useState(0);\r\n    const handleChange = (event: React.ChangeEvent<{}>, newValue: number) => {\r\n        setValue(newValue);\r\n    };\r\n\r\n    const [alignment, setAlignment] = React.useState('');\r\n    const handleAlignment = (event: React.MouseEvent<HTMLElement>, newAlignment: string | null) => {\r\n        if (newAlignment !== null) {\r\n            setAlignment(newAlignment);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <div className=\"tab-title\">\r\n                <p>Basic Information</p>\r\n                <span>About Yourself</span>\r\n            </div>\r\n            <div className=\"tab-main-content\">\r\n                <div className=\"choose-profile-pic\">\r\n                    <i>\r\n                        <img src={require('../../assets/images/user-grey.svg').default} className=\"default\" alt=\"\" />\r\n                        <img src={require('../../assets/images/user-grey.svg').default} className=\"uploaded-img d-none\" alt=\"\" />\r\n                    </i>\r\n                    <div>\r\n                        <label htmlFor=\"chooseProfilePic\" className=\"upload-outline-btn\">\r\n                            <input accept=\"image/*\" id=\"chooseProfilePic\" multiple type=\"file\" />\r\n                            <Button variant=\"outlined\" color=\"primary\">Choose File</Button>\r\n                        </label>\r\n                        <span>jpg or png. Max file size 500 KB</span>\r\n                    </div>\r\n                </div>\r\n                <TextField className=\"form-control\" label=\"Name\" variant=\"outlined\" />\r\n                <TextField className=\"form-control\" label=\"Current Designation\" variant=\"outlined\" />\r\n                <TextField className=\"form-control\" label=\"Company\" variant=\"outlined\" />\r\n                <TextField className=\"form-control\" label=\"Email ID\" variant=\"outlined\" />\r\n\r\n                <div className=\"radio-group\">\r\n                    <label>Gender</label>\r\n                    <ToggleButtonGroup\r\n                        value={alignment}\r\n                        exclusive\r\n                        onChange={handleAlignment}\r\n                        aria-label=\"text alignment\"\r\n                        className=\"gender-toggle\"\r\n                    >\r\n                        <ToggleButton value=\"left\" aria-label=\"left aligned\" title=\"Male\">\r\n                            <img src={require('../../assets/images/male-black.svg').default} className=\"default\" alt=\"\" />\r\n                            <img src={require('../../assets/images/male-primary.svg').default} className=\"active\" alt=\"\" />\r\n                        </ToggleButton>\r\n                        <ToggleButton value=\"center\" aria-label=\"centered aligned\" title=\"Female\">\r\n                            <img src={require('../../assets/images/female-black.svg').default} className=\"default\" alt=\"\" />\r\n                            <img src={require('../../assets/images/female-primary.svg').default} className=\"active\" alt=\"\" />\r\n                        </ToggleButton>\r\n                        <ToggleButton value=\"right\" aria-label=\"right aligned\" title=\"Other\">\r\n                            <img src={require('../../assets/images/unisex-black.svg').default} className=\"default\" alt=\"\" />\r\n                            <img src={require('../../assets/images/unisex-primary.svg').default} className=\"active\" alt=\"\" />\r\n                        </ToggleButton>\r\n                    </ToggleButtonGroup>\r\n                </div>\r\n\r\n                <TextField className=\"form-control\" label=\"Address\" variant=\"outlined\" />\r\n\r\n                <TextField label=\"Profile Summary\" className=\"form-control\" multiline rows={3} variant=\"outlined\" />\r\n\r\n                <Button className=\"btn btn-iconic-text btn-lg\" variant=\"contained\" color=\"primary\"><span>Next</span><img className=\"ms-xs-2 ms-1\" src={require('../../assets/images/arrow-pointing-to-right.svg').default} alt=\"\" /></Button>\r\n            </div>\r\n        </>\r\n    )\r\n\r\n}\r\n\r\n",["91","92"],"E:\\office-work\\hubura\\react-mobx-demo\\src\\component\\profile\\skillCertification.tsx",["93","94","95","96","97","98","99"],"import React from 'react'\r\nimport { Button, Box, TextField, Chip, IconButton, Menu, MenuItem, Dialog, DialogTitle, DialogContent, DialogActions, FormControl, InputLabel, Select, InputAdornment, FilledInput, OutlinedInput } from '@material-ui/core';\r\nimport { Autocomplete } from '@material-ui/lab';\r\nimport MoreHorizIcon from '@material-ui/icons/MoreHoriz';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\n\r\ninterface ChipData {\r\n    key: number;\r\n    label: string;\r\n}\r\n\r\nexport default function SkillCertification() {\r\n\r\n    const [value, setValue] = React.useState(0);\r\n    const handleChange = (event: React.ChangeEvent<{}>, newValue: number) => {\r\n        setValue(newValue);\r\n    };\r\n\r\n    const [alignment, setAlignment] = React.useState('');\r\n    const handleAlignment = (event: React.MouseEvent<HTMLElement>, newAlignment: string | null) => {\r\n        if (newAlignment !== null) {\r\n            setAlignment(newAlignment);\r\n        }\r\n    };\r\n\r\n\r\n    const [chipData, setChipData] = React.useState<ChipData[]>([\r\n        { key: 0, label: 'Graphic Designing' },\r\n        { key: 1, label: 'Marketing' },\r\n    ]);\r\n    const handleDelete = (chipToDelete: ChipData) => () => {\r\n        setChipData((chips) => chips.filter((chip) => chip.key !== chipToDelete.key));\r\n    };\r\n\r\n    const [moreMenu, setmoreMenuAnchorEl] = React.useState<null | HTMLElement>(null);\r\n    const moreMenuhandleClick = (event: React.MouseEvent<HTMLButtonElement>) => {\r\n        setmoreMenuAnchorEl(event.currentTarget);\r\n    };\r\n    const moreMenuhandleClose = () => {\r\n        setmoreMenuAnchorEl(null);\r\n    };\r\n\r\n    const [addSkillModalopen, setOpen] = React.useState(false);\r\n    const addSkillModalhandleClickOpen = () => {\r\n        setOpen(true);\r\n    };\r\n    const addSkillModalhandleClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n\r\n    return (\r\n        <>\r\n            <div className=\"tab-title\">\r\n                <p>Skills &amp; Certifications</p>\r\n                <span>Professional Skills</span>\r\n            </div>\r\n            <div className=\"tab-main-content\">\r\n                <Autocomplete\r\n                    className=\"form-control autocomplete-control completed\"\r\n                    freeSolo\r\n                    options={skills.map((option) => option.title)}\r\n                    renderInput={(params) => (\r\n                        <TextField {...params} label=\"Enter your skills\" variant=\"outlined\" helperText=\"Add upto 50 skills\" />\r\n                    )}\r\n                />\r\n                <ul className=\"chips-group\">\r\n                    {chipData.map((data) => {\r\n                        return (\r\n                            <li key={data.key}>\r\n                                <Chip\r\n                                    label={data.label}\r\n                                    onDelete={data.label === 'React' ? undefined : handleDelete(data)}\r\n                                    className=\"primary-chips removable\"\r\n                                />\r\n                            </li>\r\n                        );\r\n                    })}\r\n                </ul>\r\n\r\n                <ul className=\"certification-wrapper\">\r\n                    <li>\r\n                        <div className=\"certification-card\">\r\n                            <p className=\"certification-card-header\">\r\n                                <span>11 Jun 2019</span>\r\n                                <IconButton aria-controls=\"more-menu\" aria-haspopup=\"true\" onClick={moreMenuhandleClick} aria-label=\"more\" className=\"btn-iconic\" size=\"small\">\r\n                                    <MoreHorizIcon />\r\n                                </IconButton>\r\n                                <Menu\r\n                                    id=\"more-menu\"\r\n                                    anchorEl={moreMenu}\r\n                                    open={Boolean(moreMenu)}\r\n                                    onClose={moreMenuhandleClose}\r\n                                    className=\"primary-menu\"\r\n                                >\r\n                                    <MenuItem onClick={moreMenuhandleClose}>Edit</MenuItem>\r\n                                    <MenuItem onClick={moreMenuhandleClose}>Delete</MenuItem>\r\n                                </Menu>\r\n                            </p>\r\n                            <h6 className=\"certification-title\">Fundamentals of Graphic Design</h6>\r\n                            <span className=\"certification-from\">Coursera</span>\r\n                        </div>\r\n                    </li>\r\n                </ul>\r\n\r\n                <Button className=\"btn btn-iconic-text d-block mb-3\" onClick={addSkillModalhandleClickOpen} variant=\"outlined\" color=\"primary\" startIcon={<AddIcon />}><span>Add more</span></Button>\r\n\r\n                <Button className=\"btn btn-iconic-text d-block btn-lg\" variant=\"contained\" color=\"primary\"><span>Next</span><img className=\"ms-xs-2 ms-1\" src={require('../../assets/images/arrow-pointing-to-right.svg').default} alt=\"\" /></Button>\r\n\r\n                <Dialog open={addSkillModalopen} onClose={addSkillModalhandleClose} fullWidth={true} className=\"primary-modal\" aria-labelledby=\"Add-Certification-Modal\" maxWidth=\"sm\">\r\n                    <DialogTitle>\r\n                        <h6>Add Certification</h6>\r\n                        <IconButton aria-label=\"close\" onClick={addSkillModalhandleClose}>\r\n                            <CloseIcon />\r\n                        </IconButton>\r\n                    </DialogTitle>\r\n                    <DialogContent>\r\n                        <TextField className=\"form-control\" label=\"Course\" variant=\"outlined\" />\r\n\r\n                        <TextField className=\"form-control\" label=\"Organization\" variant=\"outlined\" />\r\n\r\n                        <TextField className=\"form-control native-datepicker\" label=\"Date\" defaultValue=\"\" type=\"date\" variant=\"outlined\" InputLabelProps={{ shrink: true, }} />\r\n\r\n                        <FormControl className=\"form-control have-suffix\" variant=\"outlined\">\r\n                            <InputLabel htmlFor=\"outlined-adornment-password\">Upload Certificate</InputLabel>\r\n                            <OutlinedInput\r\n                                id=\"outlined-adornment-password\"\r\n                                labelWidth={130}\r\n                                endAdornment={\r\n                                    <InputAdornment position=\"end\">\r\n                                        <label htmlFor=\"chooseProfilePic\" className=\"upload-outline-btn\">\r\n                                            <input accept=\"image/*\" id=\"chooseProfilePic\" multiple type=\"file\" />\r\n                                            <Button variant=\"outlined\" color=\"primary\" className=\"btn-sm\">Upload</Button>\r\n                                        </label>\r\n                                    </InputAdornment>\r\n                                }\r\n                            />\r\n                        </FormControl>\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                        <Button className=\"btn btn-lg\" variant=\"outlined\" color=\"primary\" onClick={addSkillModalhandleClose}>Cancel</Button>\r\n                        <Button className=\"btn btn-lg\" onClick={addSkillModalhandleClose} variant=\"contained\" color=\"primary\">Add</Button>\r\n                    </DialogActions>\r\n                </Dialog>\r\n            </div>\r\n        </>\r\n    )\r\n\r\n}\r\n\r\nconst skills = [\r\n    { title: 'Algorithms' },\r\n    { title: 'Analytical Skills' },\r\n    { title: 'Big Data' },\r\n    { title: 'Calculating' },\r\n    { title: 'Compiling Statistics' },\r\n    { title: 'Data Analytics' },\r\n    { title: 'Data Mining' },\r\n    { title: 'Database Design' },\r\n    { title: 'Database Management' },\r\n    { title: 'Documentation' },\r\n    { title: 'Modeling' },\r\n    { title: 'Modification' },\r\n    { title: 'Needs Analysis' },\r\n    { title: 'Quantitative Research' },\r\n    { title: 'Quantitative Reports' },\r\n    { title: 'Statistical Analysis' },\r\n    { title: 'Applications' },\r\n    { title: 'Certifications' },\r\n    { title: 'Coding' },\r\n    { title: 'Computing' },\r\n    { title: 'Configuration' },\r\n    { title: 'Customer Support' },\r\n    { title: 'Debugging' },\r\n    { title: 'Design' },\r\n    { title: 'Development' },\r\n    { title: 'Hardware' },\r\n    { title: 'Implementation' },\r\n    { title: 'Information Technology' },\r\n    { title: 'Infrastructure' },\r\n    { title: 'Languages' },\r\n    { title: 'Maintenance' },\r\n    { title: 'Network Architecture' },\r\n    { title: 'Network Security' },\r\n    { title: 'Networking' },\r\n    { title: 'New Technologies' },\r\n    { title: 'Operating Systems' },\r\n    { title: 'Programming' },\r\n    { title: 'Restoration' },\r\n    { title: 'Security' },\r\n    { title: 'Servers' },\r\n    { title: 'Software' },\r\n    { title: 'Solution Delivery' },\r\n    { title: 'Storage' },\r\n    { title: 'Structures' },\r\n    { title: 'Systems Analysis' },\r\n    { title: 'Technical Support' },\r\n    { title: 'Technology' },\r\n    { title: 'Testing' },\r\n    { title: 'Tools' },\r\n    { title: 'Training' },\r\n    { title: 'Troubleshooting' },\r\n    { title: 'Usability' },\r\n    { title: 'Benchmarking' },\r\n    { title: 'Budget Planning' },\r\n    { title: 'Engineering' },\r\n    { title: 'Fabrication' },\r\n    { title: 'Following Specifications' },\r\n    { title: 'Operations' },\r\n    { title: 'Performance Review' },\r\n    { title: 'Project Planning' },\r\n    { title: 'Quality Assurance' },\r\n    { title: 'Quality Control' },\r\n    { title: 'Scheduling' },\r\n    { title: 'Task Delegation' },\r\n    { title: 'Task Management' },\r\n    { title: 'Blogging' },\r\n    { title: 'Digital Photography' },\r\n    { title: 'Digital Media' },\r\n    { title: 'Facebook' },\r\n    { title: 'Instagram' },\r\n    { title: 'Networking' },\r\n    { title: 'Pinterest' },\r\n    { title: 'SEO' },\r\n    { title: 'Social Media Platforms' },\r\n    { title: 'Twitter' },\r\n    { title: 'Web Analytics' },\r\n    { title: 'Client Relations' },\r\n    { title: 'Email' },\r\n    { title: 'Requirements Gathering' },\r\n    { title: 'Research' },\r\n    { title: 'Subject Matter Experts (SMEs)' },\r\n    { title: 'Technical Documentation' }\r\n];\r\n","E:\\office-work\\hubura\\react-mobx-demo\\src\\component\\profile\\preferredJobs.tsx",["100","101","102"],"import React from 'react'\r\nimport { Button, TextField, Chip, FormControl, InputLabel, Select, MenuItem, FormControlLabel, Checkbox } from '@material-ui/core';\r\nimport { Autocomplete } from '@material-ui/lab';\r\n\r\ninterface preferredJob {\r\n    key: number;\r\n    label: string;\r\n}\r\n\r\ninterface preferredJobchipsLocation {\r\n    key: number;\r\n    label: string;\r\n}\r\n\r\ninterface jobTypechips {\r\n    key: number;\r\n    label: string;\r\n}\r\n\r\n\r\nexport default function PreferredJob() {\r\n\r\n    const [preferredJob, setChipData] = React.useState<preferredJob[]>([\r\n        { key: 0, label: 'Graphic Designing' },\r\n        { key: 1, label: 'Marketing' }\r\n    ]);\r\n\r\n    const [preferredJobchipsLocation, setLocationChipData] = React.useState<preferredJobchipsLocation[]>([\r\n        { key: 0, label: 'Banglore' },\r\n        { key: 1, label: 'Mumbai' }\r\n    ]);\r\n\r\n    const [jobTypechips, setJobTypeChipData] = React.useState<jobTypechips[]>([\r\n        { key: 0, label: 'Full-Time' },\r\n        { key: 1, label: 'Part-Time' }\r\n    ]);\r\n\r\n    const handleDelete = (chipToDelete: preferredJob) => () => {\r\n        setChipData((chips) => chips.filter((chip) => chip.key !== chipToDelete.key));\r\n    };\r\n\r\n    const locationhandleDelete = (chipToDelete: preferredJobchipsLocation) => () => {\r\n        setLocationChipData((chips) => chips.filter((chip) => chip.key !== chipToDelete.key));\r\n    };\r\n\r\n    const jobTypehandleDelete = (chipToDelete: preferredJobchipsLocation) => () => {\r\n        setJobTypeChipData((chips) => chips.filter((chip) => chip.key !== chipToDelete.key));\r\n    };\r\n\r\n\r\n\r\n\r\n    const [state, setState] = React.useState({\r\n        Freelancer: true,\r\n        Foreign: true\r\n    });\r\n\r\n    const checkboxhandleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n        setState({ ...state, [event.target.name]: event.target.checked });\r\n    };\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            <div className=\"tab-title\">\r\n                <p>Preferred Jobs</p>\r\n                <span>Job location,Timings etc</span>\r\n            </div>\r\n            <div className=\"tab-main-content\">\r\n\r\n                <Autocomplete\r\n                    className=\"form-control autocomplete-control completed\"\r\n                    freeSolo\r\n                    options={preferredJobs.map((option) => option.title)}\r\n                    renderInput={(params) => (\r\n                        <TextField {...params} label=\"Preferred Jobs\" variant=\"outlined\" />\r\n                    )}\r\n                />\r\n                <ul className=\"chips-group\">\r\n                    {preferredJob.map((data) => {\r\n                        return (\r\n                            <li key={data.key}>\r\n                                <Chip\r\n                                    label={data.label}\r\n                                    onDelete={data.label === 'React' ? undefined : handleDelete(data)}\r\n                                    className=\"primary-chips removable\"\r\n                                />\r\n                            </li>\r\n                        );\r\n                    })}\r\n                </ul>\r\n\r\n                <Autocomplete\r\n                    className=\"form-control autocomplete-control completed\"\r\n                    freeSolo\r\n                    options={preferredJobLocation.map((option) => option.title)}\r\n                    renderInput={(params) => (\r\n                        <TextField {...params} label=\"Location\" variant=\"outlined\" />\r\n                    )}\r\n                />\r\n                <ul className=\"chips-group\">\r\n                    {preferredJobchipsLocation.map((data) => {\r\n                        return (\r\n                            <li key={data.key}>\r\n                                <Chip\r\n                                    label={data.label}\r\n                                    onDelete={data.label === 'React' ? undefined : locationhandleDelete(data)}\r\n                                    className=\"primary-chips removable\"\r\n                                />\r\n                            </li>\r\n                        );\r\n                    })}\r\n                </ul>\r\n\r\n                <JobTypeSelect></JobTypeSelect>\r\n                <ul className=\"chips-group\">\r\n                    {jobTypechips.map((data) => {\r\n                        return (\r\n                            <li key={data.key}>\r\n                                <Chip\r\n                                    label={data.label}\r\n                                    onDelete={data.label === 'React' ? undefined : jobTypehandleDelete(data)}\r\n                                    className=\"primary-chips removable\"\r\n                                />\r\n                            </li>\r\n                        );\r\n                    })}\r\n                </ul>\r\n\r\n                <div className=\"primary-checkbox form-control\">\r\n                    <input type=\"checkbox\" className=\"primary-checkbox-input\" id=\"freeLancer\" />\r\n                    <label className=\"primary-checkbox-label\" htmlFor=\"freeLancer\">Available as freelancer</label>\r\n                </div>\r\n\r\n                <RatePerHour></RatePerHour>\r\n\r\n                <div className=\"primary-checkbox form-control\">\r\n                    <input type=\"checkbox\" className=\"primary-checkbox-input\" id=\"foreignVisa\" />\r\n                    <label className=\"primary-checkbox-label\" htmlFor=\"foreignVisa\">I have foreign country visa</label>\r\n                </div>\r\n\r\n                <div className=\"form-control-group\">\r\n                    <label className=\"form-control-group-label\" htmlFor=\"country-group\">Add Countries</label>\r\n                    <div className=\"row\">\r\n                        <div className=\"col-sm-6\">\r\n                            <Country></Country>\r\n                        </div>\r\n                        <div className=\"col-sm-6\">\r\n                            <VisaType></VisaType>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                        <div className=\"col-sm-6\">\r\n                            <Country></Country>\r\n                        </div>\r\n                        <div className=\"col-sm-6\">\r\n                            <VisaType></VisaType>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <Button className=\"btn btn-iconic-text d-block btn-lg\" variant=\"contained\" color=\"primary\"><span>Next</span><img className=\"ms-xs-2 ms-1\" src={require('../../assets/images/arrow-pointing-to-right.svg').default} alt=\"\" /></Button>\r\n\r\n            </div>\r\n        </>\r\n    )\r\n\r\n}\r\n\r\nconst preferredJobs = [\r\n    { title: 'Marketing Coordinator' },\r\n    { title: 'Medical Assistant' },\r\n    { title: 'Web Designer' },\r\n    { title: 'Graphic Designer' },\r\n    { title: 'Project Manager' },\r\n    { title: 'Librarian' }\r\n];\r\n\r\n\r\nconst preferredJobLocation = [\r\n    { title: 'Mumbai' },\r\n    { title: 'Chennai' },\r\n    { title: 'Ahmedabad' },\r\n    { title: 'Banglore' },\r\n    { title: 'Delhi' },\r\n    { title: 'Hydrabad' }\r\n];\r\n\r\nfunction JobTypeSelect() {\r\n    const [option, setOption] = React.useState('');\r\n\r\n    const handleChange = (event: React.ChangeEvent<{ value: unknown }>) => {\r\n        setOption(event.target.value as string);\r\n    };\r\n    return (\r\n        <FormControl variant=\"outlined\" className=\"form-control\">\r\n            <InputLabel>Job Type</InputLabel>\r\n            <Select\r\n                value={option}\r\n                onChange={handleChange}\r\n                MenuProps={{\r\n                    disableScrollLock: true,\r\n                }}\r\n                label=\"Job Type\"\r\n            >\r\n                <MenuItem value=\"\" disabled>Select</MenuItem>\r\n                <MenuItem value={\"Remote\"}>Remote</MenuItem>\r\n                <MenuItem value={\"FullTime\"}>Full-Time</MenuItem>\r\n                <MenuItem value={\"PartTime\"}>Part-Time</MenuItem>\r\n            </Select>\r\n        </FormControl>\r\n    );\r\n}\r\n\r\n\r\nfunction RatePerHour() {\r\n    const [option, setOption] = React.useState('');\r\n\r\n    const handleChange = (event: React.ChangeEvent<{ value: unknown }>) => {\r\n        setOption(event.target.value as string);\r\n    };\r\n    return (\r\n        <FormControl variant=\"outlined\" className=\"form-control\">\r\n            <InputLabel>Rate Per Hour</InputLabel>\r\n            <Select\r\n                value={option}\r\n                onChange={handleChange}\r\n                MenuProps={{\r\n                    disableScrollLock: true,\r\n                }}\r\n                label=\"Rate Per Hour\"\r\n            >\r\n                <MenuItem value=\"\" disabled>Select</MenuItem>\r\n                <MenuItem value={\"500\"}>500</MenuItem>\r\n                <MenuItem value={\"1000\"}>1000</MenuItem>\r\n                <MenuItem value={\"2000\"}>2000</MenuItem>\r\n            </Select>\r\n        </FormControl>\r\n    );\r\n}\r\n\r\nfunction Country() {\r\n    const [option, setOption] = React.useState('');\r\n\r\n    const handleChange = (event: React.ChangeEvent<{ value: unknown }>) => {\r\n        setOption(event.target.value as string);\r\n    };\r\n    return (\r\n        <FormControl variant=\"outlined\" className=\"form-control\">\r\n            <InputLabel>Country</InputLabel>\r\n            <Select\r\n                value={option}\r\n                onChange={handleChange}\r\n                MenuProps={{\r\n                    disableScrollLock: true,\r\n                }}\r\n                label=\"Country\"\r\n            >\r\n                <MenuItem value=\"\" disabled>Select</MenuItem>\r\n                <MenuItem value={\"USA\"}>USA</MenuItem>\r\n                <MenuItem value={\"India\"}>India</MenuItem>\r\n                <MenuItem value={\"South-Africa\"}>South-Africa</MenuItem>\r\n            </Select>\r\n        </FormControl>\r\n    );\r\n}\r\n\r\nfunction VisaType() {\r\n    const [option, setOption] = React.useState('');\r\n\r\n    const handleChange = (event: React.ChangeEvent<{ value: unknown }>) => {\r\n        setOption(event.target.value as string);\r\n    };\r\n    return (\r\n        <FormControl variant=\"outlined\" className=\"form-control\">\r\n            <InputLabel>Visa Type</InputLabel>\r\n            <Select\r\n                value={option}\r\n                onChange={handleChange}\r\n                MenuProps={{\r\n                    disableScrollLock: true,\r\n                }}\r\n                label=\"Visa Type\"\r\n            >\r\n                <MenuItem value=\"\" disabled>Select</MenuItem>\r\n                <MenuItem value={\"B1 B2\"}>B1 B2</MenuItem>\r\n                <MenuItem value={\"W1\"}>W1</MenuItem>\r\n                <MenuItem value={\"H1\"}>H1</MenuItem>\r\n            </Select>\r\n        </FormControl>\r\n    );\r\n}\r\n",{"ruleId":"103","replacedBy":"104"},{"ruleId":"105","replacedBy":"106"},{"ruleId":"107","severity":1,"message":"108","line":1,"column":17,"nodeType":"109","messageId":"110","endLine":1,"endColumn":26},{"ruleId":"111","severity":1,"message":"112","line":83,"column":19,"nodeType":"113","endLine":83,"endColumn":52},{"ruleId":"114","severity":1,"message":"115","line":506,"column":21,"nodeType":"113","endLine":506,"endColumn":55},{"ruleId":"114","severity":1,"message":"115","line":520,"column":21,"nodeType":"113","endLine":520,"endColumn":50},{"ruleId":"114","severity":1,"message":"115","line":525,"column":21,"nodeType":"113","endLine":525,"endColumn":50},{"ruleId":"114","severity":1,"message":"115","line":99,"column":41,"nodeType":"113","endLine":99,"endColumn":75},{"ruleId":"114","severity":1,"message":"115","line":113,"column":41,"nodeType":"113","endLine":113,"endColumn":70},{"ruleId":"114","severity":1,"message":"115","line":118,"column":41,"nodeType":"113","endLine":118,"endColumn":70},{"ruleId":"114","severity":1,"message":"115","line":81,"column":41,"nodeType":"113","endLine":81,"endColumn":75},{"ruleId":"114","severity":1,"message":"115","line":95,"column":41,"nodeType":"113","endLine":95,"endColumn":70},{"ruleId":"114","severity":1,"message":"115","line":100,"column":41,"nodeType":"113","endLine":100,"endColumn":70},{"ruleId":"107","severity":1,"message":"116","line":2,"column":34,"nodeType":"109","messageId":"110","endLine":2,"endColumn":43},{"ruleId":"107","severity":1,"message":"117","line":2,"column":45,"nodeType":"109","messageId":"110","endLine":2,"endColumn":49},{"ruleId":"107","severity":1,"message":"118","line":2,"column":51,"nodeType":"109","messageId":"110","endLine":2,"endColumn":61},{"ruleId":"107","severity":1,"message":"119","line":2,"column":63,"nodeType":"109","messageId":"110","endLine":2,"endColumn":67},{"ruleId":"107","severity":1,"message":"120","line":2,"column":69,"nodeType":"109","messageId":"110","endLine":2,"endColumn":77},{"ruleId":"107","severity":1,"message":"121","line":2,"column":79,"nodeType":"109","messageId":"110","endLine":2,"endColumn":85},{"ruleId":"107","severity":1,"message":"122","line":2,"column":87,"nodeType":"109","messageId":"110","endLine":2,"endColumn":98},{"ruleId":"107","severity":1,"message":"123","line":2,"column":100,"nodeType":"109","messageId":"110","endLine":2,"endColumn":113},{"ruleId":"107","severity":1,"message":"124","line":2,"column":115,"nodeType":"109","messageId":"110","endLine":2,"endColumn":128},{"ruleId":"107","severity":1,"message":"125","line":2,"column":130,"nodeType":"109","messageId":"110","endLine":2,"endColumn":141},{"ruleId":"107","severity":1,"message":"126","line":2,"column":143,"nodeType":"109","messageId":"110","endLine":2,"endColumn":153},{"ruleId":"107","severity":1,"message":"127","line":2,"column":155,"nodeType":"109","messageId":"110","endLine":2,"endColumn":161},{"ruleId":"107","severity":1,"message":"128","line":2,"column":163,"nodeType":"109","messageId":"110","endLine":2,"endColumn":177},{"ruleId":"107","severity":1,"message":"129","line":2,"column":179,"nodeType":"109","messageId":"110","endLine":2,"endColumn":190},{"ruleId":"107","severity":1,"message":"130","line":2,"column":192,"nodeType":"109","messageId":"110","endLine":2,"endColumn":205},{"ruleId":"107","severity":1,"message":"131","line":3,"column":10,"nodeType":"109","messageId":"110","endLine":3,"endColumn":22},{"ruleId":"107","severity":1,"message":"132","line":3,"column":24,"nodeType":"109","messageId":"110","endLine":3,"endColumn":36},{"ruleId":"107","severity":1,"message":"133","line":3,"column":38,"nodeType":"109","messageId":"110","endLine":3,"endColumn":55},{"ruleId":"107","severity":1,"message":"134","line":4,"column":8,"nodeType":"109","messageId":"110","endLine":4,"endColumn":21},{"ruleId":"107","severity":1,"message":"135","line":5,"column":8,"nodeType":"109","messageId":"110","endLine":5,"endColumn":15},{"ruleId":"107","severity":1,"message":"136","line":6,"column":8,"nodeType":"109","messageId":"110","endLine":6,"endColumn":17},{"ruleId":"107","severity":1,"message":"137","line":25,"column":11,"nodeType":"109","messageId":"110","endLine":25,"endColumn":19},{"ruleId":"114","severity":1,"message":"115","line":211,"column":37,"nodeType":"113","endLine":211,"endColumn":71},{"ruleId":"114","severity":1,"message":"115","line":225,"column":37,"nodeType":"113","endLine":225,"endColumn":66},{"ruleId":"114","severity":1,"message":"115","line":230,"column":37,"nodeType":"113","endLine":230,"endColumn":66},{"ruleId":"107","severity":1,"message":"138","line":8,"column":12,"nodeType":"109","messageId":"110","endLine":8,"endColumn":17},{"ruleId":"107","severity":1,"message":"139","line":9,"column":11,"nodeType":"109","messageId":"110","endLine":9,"endColumn":23},{"ruleId":"103","replacedBy":"140"},{"ruleId":"105","replacedBy":"141"},{"ruleId":"107","severity":1,"message":"142","line":2,"column":18,"nodeType":"109","messageId":"110","endLine":2,"endColumn":21},{"ruleId":"107","severity":1,"message":"127","line":2,"column":144,"nodeType":"109","messageId":"110","endLine":2,"endColumn":150},{"ruleId":"107","severity":1,"message":"129","line":2,"column":168,"nodeType":"109","messageId":"110","endLine":2,"endColumn":179},{"ruleId":"107","severity":1,"message":"138","line":15,"column":12,"nodeType":"109","messageId":"110","endLine":15,"endColumn":17},{"ruleId":"107","severity":1,"message":"139","line":16,"column":11,"nodeType":"109","messageId":"110","endLine":16,"endColumn":23},{"ruleId":"107","severity":1,"message":"143","line":20,"column":12,"nodeType":"109","messageId":"110","endLine":20,"endColumn":21},{"ruleId":"107","severity":1,"message":"144","line":21,"column":11,"nodeType":"109","messageId":"110","endLine":21,"endColumn":26},{"ruleId":"107","severity":1,"message":"145","line":2,"column":78,"nodeType":"109","messageId":"110","endLine":2,"endColumn":94},{"ruleId":"107","severity":1,"message":"146","line":2,"column":96,"nodeType":"109","messageId":"110","endLine":2,"endColumn":104},{"ruleId":"107","severity":1,"message":"147","line":58,"column":11,"nodeType":"109","messageId":"110","endLine":58,"endColumn":31},"no-native-reassign",["148"],"no-negated-in-lhs",["149"],"@typescript-eslint/no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","jsx-a11y/heading-has-content","Headings must have content and the content must be accessible by a screen reader.","JSXOpeningElement","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'TextField' is defined but never used.","'Chip' is defined but never used.","'IconButton' is defined but never used.","'Menu' is defined but never used.","'MenuItem' is defined but never used.","'Dialog' is defined but never used.","'DialogTitle' is defined but never used.","'DialogContent' is defined but never used.","'DialogActions' is defined but never used.","'FormControl' is defined but never used.","'InputLabel' is defined but never used.","'Select' is defined but never used.","'InputAdornment' is defined but never used.","'FilledInput' is defined but never used.","'OutlinedInput' is defined but never used.","'Autocomplete' is defined but never used.","'ToggleButton' is defined but never used.","'ToggleButtonGroup' is defined but never used.","'MoreHorizIcon' is defined but never used.","'AddIcon' is defined but never used.","'CloseIcon' is defined but never used.","'ChipData' is defined but never used.","'value' is assigned a value but never used.","'handleChange' is assigned a value but never used.",["148"],["149"],"'Box' is defined but never used.","'alignment' is assigned a value but never used.","'handleAlignment' is assigned a value but never used.","'FormControlLabel' is defined but never used.","'Checkbox' is defined but never used.","'checkboxhandleChange' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]